version: "3.9"

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./scripts/entrypoint.sh
    depends_on:
      - db
      - redis
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      PUBLIC_BASE_URL: ${PUBLIC_BASE_URL}
      TELEGRAM_SECRET_TOKEN: ${TELEGRAM_SECRET_TOKEN}
      USE_POLLING: ${USE_POLLING}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_MODEL: ${OPENROUTER_MODEL}
      OPENROUTER_APP_URL: ${OPENROUTER_APP_URL}
      OPENROUTER_APP_NAME: ${OPENROUTER_APP_NAME}
      LOG_LEVEL: ${LOG_LEVEL}
      PORT: ${PORT}
      INTERJECT_TICK_SECONDS: ${INTERJECT_TICK_SECONDS}
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    ports:
      - "${PORT}:8080"
    restart: unless-stopped

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -q"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    restart: unless-stopped

volumes:
  db_data:
